volumes:
  postgres-data:
    external: true
  pg-admin:
    external: true
services:
  postgres:
        build:
            context: ./relational-data
            dockerfile: ./Dockerfile.dev
        volumes:
            - postgres-data:/var/lib/postgresql/data
        environment:
<<<<<<< HEAD
            - POSTGRES_MULTIPLE_DATABASES=events,fastapi,users,teams
            - POSTGRES_PASSWORD=test-databases
        ports:
            - 15432:5432
  teams:
    build:
      context: teams_api
      dockerfile: Dockerfile.dev
    ports:
      - 8100:8100
    volumes:
      - ./teams_api:/app
    environment:
      DATABASE_URL: postgresql://teams:password@postgres/teams
      WAIT_HOSTS: postgres:5432
  events:
    build:
      context: events_api
      dockerfile: Dockerfile.dev
    ports:
      - 8080:8080
    volumes:
      - ./events_api:/app
    environment:
      DATABASE_URL: postgresql://events:password@postgres/events
      WAIT_HOSTS: postgres:5432
  users:
    build:
      context: users_api
      dockerfile: Dockerfile.dev
    ports:
      - 8090:8090
    volumes:
      - ./users_api:/app
    environment:
      DATABASE_URL: postgresql://users:password@postgres/users
      WAIT_HOSTS: postgres:5432
  fastapi:
=======
            - POSTGRES_MULTIPLE_DATABASES=events,fastapi,users
            - POSTGRES_PASSWORD=test-databases
        ports:
            - 15432:5432
  pg-admin:
    image: dpage/pgadmin4
    volumes:
      - pg-admin:/var/lib/pgadmin
    ports:
      - 8082:80
    environment:
      PGADMIN_DEFAULT_EMAIL: table@table.com
      PGADMIN_DEFAULT_PASSWORD: table
      PGADMIN_DISABLE_POSTFIX: 1
  events:
>>>>>>> 5449f9af2cd1dfbe56ca92c9b73fd23137e1ed02
    build:
<<<<<<< HEAD
      context: events_api
=======
      context: users_api
>>>>>>> update-journal
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8000"
    volumes:
      - ./events_api:/app
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgresql://events:password@postgres/events
      WAIT_HOSTS: postgres:5432
      PGDATABASE: events
  users:
    build:
      context: users_api
      dockerfile: Dockerfile.dev
    ports:
      - 8090:8090
    volumes:
      - ./users_api:/app
    environment:
      DATABASE_URL: postgresql://users:password@postgres/users
      WAIT_HOSTS: postgres:5432
  ghi:
    image: node:lts-bullseye
    command: /bin/bash run.sh
    working_dir: /app
    volumes:
      - ./ghi:/app
    ports:
      - "3000:3000"
    environment:
      HOST_OS: ${OS}
      NODE_ENV: development
      HOST: "0.0.0.0"
      REACT_APP_API_HOST: http://localhost:8000
